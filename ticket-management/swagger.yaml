swagger: "2.0"
info:
  title: Resolute
  description: Resolves a query/ticket in no time.
definitions:

  ChatDto:
    type: object
    properties:
      ChatId:
        type: integer
        format: int64
      Description:
        type: string
      Userhandle:
        type: string
      Customerhandle:
        type: string
    
  Comments:
    type: object
    properties:
      CommentId:
        type: integer
        format: int64
      Comment:
        type: string
      CreatedOn:
        type: string
      CreatedBy:
        type: string
      UpdatedOn:
        type: string
      UpdatedBy:
        type: string

  Conversation:
    type: object
    properties:
      ConversationId:
        type: integer
        format: int64
      ConversationString:
        type: string
      From:
        type: string
      To:
        type: string
      CreatedOn:
        type: string
      CreatedBy:
        type: string
      UpdatedOn:
        type: string
      UpdatedBy:
        type: string

  Ticket:
    type: object
    properties:
      TicketId:
        type: integer
        format: int64
      Subject:
        type: string
      Description:
        type: string
      Source:
        type: string
      Priority:
        type: string
      Status:
        type: string
        enum:
          - Opened
          - Closed
          - Pending
      Sla:
        type: integer
        format: int64
      Comment:
        type: string
      Conversation:
        type: string
      CreatedOn:
        type: string
      CreatedBy:
        type: string
      UpdatedOn:
        type: string
      UpdatedBy:
        type: string
      Agentid:
        type: integer
        format: int64
      Departmentid:
        type: integer
        format: int64
      Userid:
        type: integer
        format: int64
      Customerid:
        type: integer
        format: int64

  TicketCount:
    type: object
    properties:
      Total:
        type: integer
        format: int64
      Open:
        type: integer
        format: int64
      Closed:
        type: integer
        format: int64
      Due:
        type: integer
        format: int64

  TwitterDto:
    type: object
    properties: 
      Twitterid:
        type: string
      Description:
        type: string
      Userhandle:
        type: string
      Customerhandle:
        type: string

paths:
  /tickets:
    get:
      tags:
       - Tickets
      description: Gets all the tickets assigned to an agent
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Ticket'
        404:
          description: Tickets Not Found

  /tickets/status/{status}:
    get:
      tags:
       - Tickets
      description: Gets all the tickets by Status
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Ticket'
        400:
          description: Invalid Status Entered
        404:
          description: Tickets Not Found

  /tickets/detail/{id}:
    get:
      tags:
       - Tickets
      description: Gets all the tickets by TicketID
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Ticket'
        400:
          description: Invalid ID Entered
        404:
          description: Tickets Not Found

  /tickets/count:
    get:
      tags:
       - Tickets
      description: Gets the count of total tickets, open tickets, closed tickets and due tickets 
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/TicketCount'
        404: 
          description: Tickets Not Found

  /ticket/filter:
    get:
      tags:
       - Tickets
      description: Gets all tickets subject to the input fields 
      produces:
        - application/json
      parameters:
        - in: query
          name: agentid
          schema:
            type: integer
        - in: query
          name: departmentid
          schema:
            type: integer
        - in: query
          name: userid
          schema:
            type: integer
        - in: query
          name: customerid
          schema:
            type: integer
        - in: query
          name: source
          schema:
            type: string
        - in: query
          name: priority
          schema:
            type: string
        - in: query
          name: status
          schema:
            type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Ticket'
        404:
          description: Tickets Not Found


  /posttickets:
    post:
      tags:
       - Tickets
      description: Creates a new ticket
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TwitterDto'
      responses:
        200:
          description: OK
        405:
          description: Invalid Input

  /puttickets:
    put:
      tags:
       - Tickets
      description: Updates an existing ticket
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Ticket'
      responses:
        200:
          description: OK
        405:
          description: Invalid Input


